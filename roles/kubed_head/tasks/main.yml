---
- name: Initialize k8s cluster using kubeadm
  ansible.builtin.shell: |
    kubeadm init --apiserver-advertise-address="{{ ansible_host }}" --apiserver-cert-extra-sans="{{ ansible_host }}" --node-name "{{ ansible_hostname }}" --pod-network-cidr=10.244.0.0/16
    touch "{{ ki_cluster }}"
  args:
    creates: "{{ ki_cluster }}"

- name: Setup kubeconfig for main user
  ansible.builtin.shell: |
    mkdir -p /home/kwkaiser/.kube
    cp -i /etc/kubernetes/admin.conf /home/kwkaiser/.kube/config
    chown kwkaiser:kwkaiser /home/kwkaiser/.kube/config
  args:
    creates: /home/kwkaiser/.kube

- name: Retrieve flannel setup yml
  become_user: kwkaiser
  ansible.builtin.shell: wget https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml -O "{{ kube_init }}/kube-flannel.yml"
  args:
    creates: "{{ kube_init }}/kube-flannel.yml"

- name: Apply flannel config
  become_user: kwkaiser
  ansible.builtin.shell: |
    kubectl apply -f "{{ kube_init }}/kube-flannel.yml"

- name: Generate & apply edited flannel config
  become_user: kwkaiser
  ansible.builtin.shell: |
    cd "{{ kube_init }}"
    cat kube-flannel.yml | yq  -s '$index'
    cat 5.yml | yq '.spec.template.spec.containers[0].args += ["--iface=eth0"]' > cleaned.yaml
    kubectl apply -f ./cleaned.yaml
  args:
    creates: "{{ kube_init }}/cleaned.yaml"

# - name: Remove taint from head node
#   become_user: kwkaiser
#   ansible.builtin.shell: |
#     kubectl taint nodes --all node-role.kubernetes.io/control-plane-
#     touch "{{ ki_untaint }}"
#   args:
#     creates: "{{ ki_untaint }}"

- name: Register kube join command
  ansible.builtin.command: kubeadm token create --print-join-command
  register: kube_join_cluster_command
