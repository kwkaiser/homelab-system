---
# - name: Download K3s script for head
#   ansible.builtin.get_url:
#     url: https://get.k3s.io
#     mode: 'a+x'
#     dest: /home/kwkaiser/k3s.sh

# - name: Setup server
#   ansible.builtin.command: sh /home/kwkaiser/k3s.sh
#   environment:
#     INSTALL_K3S_EXEC: "server --node-ip {{ ansible_host }} --node-external-ip {{ ansible_host }} --kubelet-arg=allowed-unsafe-sysctls=net.ipv6.conf.all.forwarding,net.ipv4.conf.all.src_valid_mark,net.ipv6.conf.all.disable_ipv6,net.ipv4.ip_forward"
#   args:
#     creates: /etc/rancher/k3s/k3s.yaml


# - name: Get node token
#   ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
#   register: token_output

# - name: Set join token
#   ansible.builtin.set_fact:
#     join_token: "{{ token_output.stdout }}"
#     join_server: "{{ ansible_host }}"
#   delegate_to: "{{ item }}"
#   delegate_facts: true
#   with_items: "{{ groups['all'] }}"

# - name: Label head
#   ansible.builtin.command: kubectl label nodes homelab-thinkcentre head=true

- name: Copy K3s service file
  register: k3s_service
  ansible.builtin.template:
    src: "k3s.service.j2"
    dest: "{{ systemd_dir }}/k3s.service"
    owner: root
    group: root
    mode: '0644'

- name: Enable and check K3s service
  ansible.builtin.systemd:
    name: k3s
    daemon_reload: true
    state: restarted
    enabled: true

- name: Wait for node-token
  ansible.builtin.wait_for:
    path: "{{ k3s_server_location }}/server/node-token"

- name: Register node-token file access mode
  ansible.builtin.stat:
    path: "{{ k3s_server_location }}/server/node-token"
  register: p

- name: Change file access node-token
  ansible.builtin.file:
    path: "{{ k3s_server_location }}/server/node-token"
    mode: "g+rx,o+rx"

- name: Read node-token from master
  ansible.builtin.slurp:
    path: "{{ k3s_server_location }}/server/node-token"
  register: node_token

# - name: Store Master node-token
#   ansible.builtin.set_fact:
#     token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

- name: Set join token
  ansible.builtin.set_fact:
    join_token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['all'] }}"

- name: Restore node-token file access
  ansible.builtin.file:
    path: "{{ k3s_server_location }}/server/node-token"
    mode: "{{ p.stat.mode }}"

- name: Create directory .kube
  ansible.builtin.file:
    path: ~{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    mode: "u=rwx,g=rx,o="

- name: Replace IP address
  ansible.builtin.replace:
    path: /etc/rancher/k3s/k3s.yaml
    regexp: '127\.0\.0\.1:6443'
    replace: "{{ ansible_host }}:6443"

- name: Replace https://localhost:6443 by https://master-ip:6443
  command: >-
    k3s kubectl config set-cluster default
      --server=https://{{ master_ip }}:6443
      --kubeconfig ~{{ ansible_user }}/.kube/config
  changed_when: true

- name: Copy config file to user home directory
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~{{ ansible_user }}/.kube/config
    remote_src: true
    owner: "{{ ansible_user }}"
    mode: "u=rw,g=,o="

- name: Create kubectl symlink
  ansible.builtin.file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Create crictl symlink
  ansible.builtin.file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    state: link
