---
- name: Denote kube init facts
  ansible.builtin.set_fact:
    kube_init: /home/kwkaiser/.kube-init

- name: Denote additional kube init facts
  ansible.builtin.set_fact:
    ki_containerd_config: "{{ kube_init }}/containerd-config"
    ki_containerd_restart: "{{ kube_init }}/containerd-restart"
    ki_cluster: "{{ kube_init }}/cluster"
    ki_network_add: "{{ kube_init }}/network_add"
    ki_network_create: "{{ kube_init }}/network_create"
    ki_untaint: "{{ kube_init }}/untaint"
    ki_joined: "{{ kube_init }}/joined"

- name: Create dir to denote creation of cluster
  ansible.builtin.file:
    path: "{{ kube_init }}"
    state: directory
    owner: kwkaiser
    group: kwkaiser
    mode: "0777"

- name: Remove swapfile from /etc/fstap
  ansible.posix.mount:
    fstype: swap
    state: absent
    name:
      - swap
      - none

- name: Disable swap
  ansible.builtin.command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Rm config
  ansible.builtin.shell: rm /etc/containerd/config.toml && touch "{{ki_containerd_config }}"
  args:
    creates: "{{ ki_containerd_config }}"

- name: Restart containerd
  ansible.builtin.shell: systemctl restart containerd && touch "{{ ki_containerd_restart }}"
  args:
    creates: "{{ ki_containerd_restart }}"

- name: K8s port (api server)
  community.general.ufw:
    comment: k8s port (api server)
    rule: allow
    port: 6443

- name: K8s port (etcd server api)
  community.general.ufw:
    comment: k8s port (etcd server api)
    rule: allow
    from_port: 2379
    to_port: 2380

- name: K8s port (kubelet api)
  community.general.ufw:
    comment: k8s port (kubelet api)
    rule: allow
    port: 10250

- name: K8s port (kube scheduler)
  community.general.ufw:
    comment: k8s port (kube scheduler)
    rule: allow
    port: 10259

- name: K8s port (kube controller)
  community.general.ufw:
    comment: k8s port (kube controller)
    rule: allow
    port: 10257

- name: K8s port (node port services)
  community.general.ufw:
    comment: k8s port (node port services)
    rule: allow
    from_port: 30000
    to_port: 32767

- name: Enable masquerading in ufw
  ansible.builtin.lineinfile:
    dest: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY"
    line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'
    state: present

- name: Restart ufw
  ansible.builtin.systemd:
    name: ufw
    daemon_reload: true
    state: restarted

# - name: Add apt key for k8s
#   command: curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
#   args:
#     creates: /etc/apt/keyrings/kubernetes-archive-keyring.gpg

# - name: Add apt key for k8s
#   ansible.builtin.apt_key:
#     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
#     state: present

- name: Copy over google keyring
  ansible.builtin.copy:
    src: google-key.gpg
    dest: /tmp/google-key.gpg

- name: Add apt key for k8s
  ansible.builtin.apt_key:
    file: /tmp/google-key.gpg
    state: present

- name: Add repo for k8s
  ansible.builtin.apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install k8s binaries
  ansible.builtin.apt:
    state: present
    update_cache: true
    name:
      - kubelet
      - kubeadm
      - kubectl

- name: Configure node ip
  ansible.builtin.lineinfile:
    path: /etc/default/kubelet
    create: true
    mode: "0700"
    line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}

- name: Start kubelet
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    enabled: true
    state: restarted

- name: Make sure flannel env is created
  ansible.builtin.file:
    state: directory
    recurse: yes
    path: /run/flannel/

- name: Copy over flannel config
  ansible.builtin.copy:
    dest: /run/flannel/subnet.env
    content: |
      FLANNEL_NETWORK=10.244.0.0/16
      FLANNEL_SUBNET=10.244.0.1/24
      FLANNEL_MTU=1450
      FLANNEL_IPMASQ=true
