---
- name: denote kube init facts
  ansible.builtin.set_fact:
    kube_init: /home/kwkaiser/.kube-init

- name: denote additional kube init facts 
  ansible.builtin.set_fact:
    ki_containerd_config: "{{kube_init}}/containerd-config"
    ki_containerd_restart: "{{kube_init}}/containerd-restart"
    ki_cluster: "{{kube_init}}/cluster"
    ki_network_add: "{{kube_init}}/network_add"
    ki_network_create: "{{kube_init}}/network_add"
    ki_untaint: "{{kube_init}}/untaint"
    ki_joined: "{{kube_init}}/joined"

- name: create dir to denote creation of cluster
  ansible.builtin.file:
    path: "{{kube_init}}"
    state: directory
    owner: kwkaiser
    group: kwkaiser
    mode: '0777'

- name: remove swapfile from /etc/fstap
  ansible.builtin.mount:
    fstype: swap
    state: absent
    name: 
      - swap
      - none

- name: disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: rm config
  shell: rm /etc/containerd/config.toml && touch "{{ki_containerd_config}}"
  args:
    creates: "{{ki_containerd_config}}"

- name: restart containerd
  shell: systemctl restart containerd && touch "{{ki_containerd_restart}}"
  args:
    creates: "{{ki_containerd_restart}}"

- name: add apt key for k8s 
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add repo for k8s
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: install k8s binaries
  apt: 
    state: present
    update_cache: yes
    name: 
      - kubelet
      - kubeadm
      - kubectl

- name: configure node ip
  lineinfile:
    path: /etc/default/kubelet
    create: yes
    line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}

- name: start kubelet 
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    enabled: true
    state: started